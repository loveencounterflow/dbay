{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DBAY'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\ntypes                     = require './types'\nguy                       = require 'guy'\nnew_bsqlt3_connection     = require 'better-sqlite3'\n#...........................................................................................................\nE                         = require './errors'\nH                         = require './helpers'\n{ DBay_query            } = require './query-mixin'\n{ DBay_ctx              } = require './ctx-mixin'\n{ DBay_openclose        } = require './open-close-mixin'\n{ DBay_stdlib           } = require './stdlib-mixin'\n{ DBay_sqlgen           } = require './sqlgen-mixin'\n{ Random                } = require './random'\n{ DBay_udf              } = require './udf-mixin'\n{ Sql                   } = require './sql'\n{ DBay_sqlx }             = require 'dbay-sql-macros'\nGUY_LEGACY = require 'guy-legacy'\n\n#===========================================================================================================\nclass @DBay extends   \\\n  DBay_query          \\\n  DBay_ctx            \\\n  DBay_openclose      \\\n  DBay_stdlib         \\\n  DBay_sqlgen         \\\n  DBay_udf            \\\n  Function\n\n  #---------------------------------------------------------------------------------------------------------\n  ### This function is meant to be used to explicitly mark up SQL literals as in\n  constructs like `for row from db SQL\"select * from ...\"`. The markup can help text editors to provided\n  syntax hiliting and other language-specific features for embedded SQL strings. ###\n  @SQL: H.SQL\n\n  #---------------------------------------------------------------------------------------------------------\n  @C: guy.lft.freeze\n    autolocation: H.autolocation\n    symbols:\n      execute: Symbol 'execute'\n    defaults:\n      #.....................................................................................................\n      constructor_cfg:\n        # _temp_prefix: '_dba_temp_'\n        readonly:       false\n        create:         true\n        timeout:        5000\n        #...................................................................................................\n        overwrite:      false\n        path:           null\n        random_seed:    null\n        random_delta:   null\n        #...................................................................................................\n        macros:         false\n        journal_mode:   'wal'\n        # journal_mode:   'delete'\n        # create_stdlib:  true\n      #.....................................................................................................\n      dbay_with_transaction_cfg:\n        mode:         'deferred'\n      #.....................................................................................................\n      dba_open_cfg:\n        schema:     null\n        path:       null\n        # overwrite:  false\n        # create:     true\n      #.....................................................................................................\n      dbay_create_function_cfg:\n        deterministic:  true\n        varargs:        false\n        directOnly:     false\n      #.....................................................................................................\n      dbay_create_aggregate_function_cfg:\n        deterministic:  true\n        varargs:        false\n        directOnly:     false\n        start:          null\n      #.....................................................................................................\n      dbay_create_window_function_cfg:\n        deterministic:  true\n        varargs:        false\n        directOnly:     false\n        start:          null\n      #.....................................................................................................\n      dbay_create_table_function_cfg:\n        deterministic:  true\n        varargs:        false\n        directOnly:     false\n      #.....................................................................................................\n      dbay_create_virtual_table_cfg: {}\n      #.....................................................................................................\n      dbay_create_insert_cfg:\n        schema:         'main'\n        into:           null\n        fields:         null\n        exclude:        null\n        returning:      null\n      #.....................................................................................................\n      dbay_execute_file_cfg:\n        path:           null\n        encoding:       'utf-8'\n      #.....................................................................................................\n      dba_dt_now_cfg:\n        subtract:       null\n        add:            null\n\n  #---------------------------------------------------------------------------------------------------------\n  @cast_sqlt_cfg: ( me ) ->\n    ### Produce a configuration object for `better-sqlite3` from `me.cfg`. ###\n    R                = guy.props.pluck_with_fallback me.cfg, null, 'readonly', 'timeout'\n    R.fileMustExist  = not me.cfg.create; delete me.cfg.create\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  @cast_constructor_cfg: ( me, cfg = null ) ->\n    clasz           = me.constructor\n    R               = cfg ? me.cfg\n    #.......................................................................................................\n    if R.path?\n      R.temporary  ?= false\n      R.path        = PATH.resolve R.path\n    else\n      R.temporary  ?= true\n      filename      = me.rnd.get_random_filename()\n      R.path        = PATH.resolve PATH.join clasz.C.autolocation, filename\n    R = guy.props.omit_nullish R ### TAINT should not be needed ###\n    R = { @C.defaults.constructor_cfg..., R..., }\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  @declare_types: ( me ) ->\n    ### called from constructor via `guy.cfg.configure_with_types()` ###\n    me.cfg        = @cast_constructor_cfg me\n    me.sqlt_cfg   = @cast_sqlt_cfg        me\n    me.cfg        = guy.lft.freeze guy.props.omit_nullish me.cfg\n    me.sqlt_cfg   = guy.lft.freeze guy.props.omit_nullish me.sqlt_cfg\n    me.types.validate.constructor_cfg me.cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( cfg ) ->\n    super '...P', 'return this._me.do(...P)'\n    @_me        = @bind @\n    @_me.state  = guy.lft.freeze {}\n    @_me.sql    = new Sql @\n    guy.props.hide @_me, 'rnd',  new Random { seed: cfg?.random_seed ? null, delta: cfg?.random_delta ? null, }\n    @_$query_initialize?()\n    @_$ctx_initialize?()\n    @_$openclose_initialize?()\n    @_$stdlib_initialize?()\n    @_$sqlgen_initialize?()\n    @_$udf_initialize?()\n    @_$trash_initialize?()\n    GUY_LEGACY.cfg.configure_with_types @_me, cfg, types\n    #.......................................................................................................\n    guy.props.hide @_me, '_dbs', {}\n    guy.props.hide @_me, 'E', E\n    @_me._register_schema 'main', @_me.cfg.path, @_me.cfg.temporary\n    unless @constructor._skip_sqlt\n      guy.props.hide @_me, 'sqlt1', @_me._new_bsqlt3_connection()\n      @set_journal_mode.call @_me, @_me.cfg.journal_mode\n    guy.props.hide @_me, 'macros', new DBay_sqlx()\n    @_compile_sql?()\n    ### make `alt` an on-demand clone of present instance: ###\n    guy.props.def_oneoff @_me, 'alt', { enumerable: false, }, => new @constructor @_me.cfg\n    # @create_stdlib() if @_me.cfg.create_stdlib\n    # @_create_sql_functions()\n    # @_create_db_structure()\n    guy.process.on_exit => @_me.destroy()\n    return @_me\n\n  #---------------------------------------------------------------------------------------------------------\n  _new_bsqlt3_connection: ->\n    return new_bsqlt3_connection @cfg.path, @sqlt_cfg\n\n  #---------------------------------------------------------------------------------------------------------\n  _register_schema: ( schema, path, temporary ) ->\n    ### Register a schema and descriptional properties, especially whether DB file is to be removed on\n    process exit. ###\n    @_dbs[ schema ] = { path, temporary, }\n    return null\n\n\n  #=========================================================================================================\n  # CLEANUP ON DEMAND, ON PROCESS EXIT\n  #---------------------------------------------------------------------------------------------------------\n  destroy: ->\n    ### To be called on progress exit or explicitly by client code. Removes all DB files marked 'temporary'\n    in `@_dbs`. ###\n    try @sqlt1?.close() catch error then warn '^dbay/main@1^', error.message\n    for schema, d of @_dbs\n      continue unless d.temporary\n      H.unlink_file d.path\n      ### NOTE for purpose of these temporary files, see https://www.sqlite.org/tempfiles.html ###\n      H.unlink_file \"#{d.path}-shm\"\n      H.unlink_file \"#{d.path}-wal\"\n      H.unlink_file \"#{d.path}-journal\"\n    return null\n\nguy.props.hide @DBay, 'new_bsqlt3_connection', new_bsqlt3_connection\n\n\n"
  ]
}