{
  "version": 3,
  "file": "vnr.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/vnr.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'ICQL/EXPERIMENTS/VNR'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\n# PATH                      = require 'path'\n# PD                        = require 'pipedreams'\n# { $\n#   $async\n#   select }                = PD\n{ assign\n  jr }                    = CND\n#...........................................................................................................\n@types                    = require '../types'\n{ isa\n  validate\n  cast\n  declare\n  size_of\n  type_of }               = @types\nICQL                      = require '../..'\n#-----------------------------------------------------------------------------------------------------------\nPATH                      = require 'path'\n@cwd_abspath              = CND.cwd_abspath\n@cwd_relpath              = CND.cwd_relpath\n@here_abspath             = CND.here_abspath\n@_drop_extension          = ( path ) => path[ ... path.length - ( PATH.extname path ).length ]\n@project_abspath          = ( P... ) => CND.here_abspath __dirname, '../..', P...\n\n\n\n#===========================================================================================================\n#\n#-----------------------------------------------------------------------------------------------------------\n@get_icql_settings = ->\n  R =\n    connector:    require 'better-sqlite3'\n    db_path:      '/tmp/icql.db'\n    icql_path:    @project_abspath 'src/experiments/vnr.icql'\n    # clear:        true\n  return R\n\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_casts = ->\n  db                = ICQL.bind @get_icql_settings()\n  db.$.clear()\n  # urge 'µ33092', jr db.$.all_rows db.read_sqlite_master()\n  db.create_demo_table()\n  # urge 'µ33092', jr db.$.all_rows db.read_sqlite_master()\n  db.create_myview()\n  # db.create_trigger_on_master()\n  # urge 'µ33092', jr db.$.all_rows db.read_sqlite_master()\n  #---------------------------------------------------------------------------------------------------------\n  # types = db.$.column_types 'mytable'\n  # insert_into_mytable =\n  rows = [\n    { vnr: 'x', bytes: 'x', n: 'x', is_great: 'x', something: 'x', }\n    { vnr: 'x', bytes: 1, n: 'x', is_great: 'x', something: 'x', }\n    # { vnr: 'x', bytes: true, n: 'x', is_great: 'x', something: 'x', }\n    ]\n  for row in rows\n    db.insert_into_mytable row\n  #---------------------------------------------------------------------------------------------------------\n  for row from db.read_mytable()\n    info jr row\n  debug db.$.column_types 'mytable'\n  debug db.$.column_types 'myview'\n  debug cast.boolean 'number', true\n  debug cast.boolean 'number', false\n  #---------------------------------------------------------------------------------------------------------\n  statement = db.$.prepare \"select * from mytable limit 0;\"\n  help jr ( \"#{c.name}: #{c.type}\" for c in statement.columns() )\n  statement = db.$.prepare \"select * from myview limit 0;\"\n  help jr ( \"#{c.name}: #{rpr c.type}\" for c in statement.columns() )\n  #---------------------------------------------------------------------------------------------------------\n  return null\n\nprovide_VNR = ->\n  HOLLERITH = require 'hollerith-codec'\n\n  #-----------------------------------------------------------------------------------------------------------\n  @deepen = ( vnr, start = 0 ) ->\n    validate.vnr vnr\n    return vnr.push start\n\n  #-----------------------------------------------------------------------------------------------------------\n  @advance = ( vnr ) ->\n    validate.vnr vnr\n    vnr[ vnr.length - 1 ]++\n    return vnr\n\n  #-----------------------------------------------------------------------------------------------------------\n  @encode = ( vnr ) ->\n    validate.vnr vnr\n    return HOLLERITH.encode R.vnr\n\n  #-----------------------------------------------------------------------------------------------------------\n  @decode = ( buffer ) ->\n    validate.buffer buffer\n    return HOLLERITH.decode buffer\n\n\n  return @\nVNR = provide_VNR.apply {}\n\n#-----------------------------------------------------------------------------------------------------------\n@demo_vnr = ->\n  HOLLERITH = require 'hollerith-codec'\n  db        = ICQL.bind @get_icql_settings()\n  db.$.clear()\n  db.create_vnrtable()\n  # debug 'µ44433', @types.specs\n  #.........................................................................................................\n  db.insert_into_vnrtable = ( Q ) ->\n    validate.vnr Q.vnr\n    R             = assign {}, Q\n    R.vnr_blob    = HOLLERITH.encode R.vnr\n    R.vnr         = jr R.vnr\n    R.is_stamped  = cast.boolean 'number', R.is_stamped\n    return @_insert_into_vnrtable R\n  #.........................................................................................................\n  db.read_vnrtable = ->\n    for R from @_read_vnrtable()\n      R.vnr_blob    = R.vnr_blob.toString 'hex'\n      R.vnr         = JSON.parse R.vnr\n      R.is_stamped  = cast.number 'boolean', R.is_stamped\n      yield R\n  #.........................................................................................................\n  rows = [\n    { vnr: [  -1, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [ -10, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [  -2, ],      is_stamped: false,  text: \"some text\",  }\n    { vnr: [ -20, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [   0, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [   1, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [  10, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [  10, -1, ],  is_stamped: true,   text: \"some text\",  }\n    { vnr: [  10, -2, ],  is_stamped: true,   text: \"some text\",  }\n    { vnr: [  10, 0, ],   is_stamped: true,   text: \"some text\",  }\n    { vnr: [  10, 1, ],   is_stamped: true,   text: \"some text\",  }\n    { vnr: [  10, 2, ],   is_stamped: true,   text: \"some text\",  }\n    { vnr: [  10, 10, ],  is_stamped: true,   text: \"some text\",  }\n    { vnr: [  12, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [   2, ],      is_stamped: true,   text: \"some text\",  }\n    { vnr: [  20, ],      is_stamped: true,   text: \"some text\",  }\n    ]\n  for row in rows\n    # delete db.vnr_blob\n    db.insert_into_vnrtable row\n  #.........................................................................................................\n  for row from db.read_vnrtable()\n    # delete row.vnr_blob\n    info jr row\n  return null\n\n\n############################################################################################################\nunless module.parent?\n  do =>\n    # await @demo_casts()\n    await @demo_vnr()\n\n\n\n\n\n\n\n\n"
  ]
}