{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/functions-mixin.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'ICQL-DBA/FUNCTIONS-MIXIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nE                         = require './errors'\n{ misfit }                = require './common'\nSQL                       = String.raw\n{ lets\n  freeze }                = require 'letsfreezethat'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@Functions_mixin = ( clasz = Object ) => class extends clasz\n\n  #---------------------------------------------------------------------------------------------------------\n  _register_udf: ( udf_type, cfg ) ->\n    ### TAINT validate more thoroughly, especially cfg._dba_udf_type ###\n    ### TAINT consider to use (virtual?) table for this ###\n    @types.validate.nonempty_text udf_type\n    @types.validate.object cfg\n    @types.validate.nonempty_text cfg.name\n    { name, } = cfg\n    switch udf_type\n      when 'single_valued'\n        entry =\n          name:   name\n          arity:  cfg.call.length ### TAINT respect varargs ###\n      else\n        entry =\n          name:   name\n          cfg:    cfg\n    @_catalog = lets @_catalog, ( d ) -> d[ cfg.name ] = entry\n    return null\n\n  #=========================================================================================================\n  # USER-DEFINED FUNCTIONS\n  #---------------------------------------------------------------------------------------------------------\n  create_function: ( cfg ) ->\n    @types.validate.dba_create_function_cfg ( cfg = { @types.defaults.dba_create_function_cfg..., cfg..., } )\n    { name\n      call\n      directOnly\n      deterministic\n      varargs }     = cfg\n    @sqlt.function name, { deterministic, varargs, directOnly, }, call\n    @_register_udf 'single_valued', cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  create_aggregate_function: ( cfg ) ->\n    @types.validate.dba_create_aggregate_function_cfg ( cfg = { @types.defaults.dba_create_aggregate_function_cfg..., cfg..., } )\n    { name\n      start\n      step\n      directOnly\n      deterministic\n      varargs }     = cfg\n    @sqlt.aggregate name, { start, step, deterministic, varargs, directOnly, }\n    @_register_udf 'aggregate', cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  create_window_function: ( cfg ) ->\n    @types.validate.dba_create_window_function_cfg ( cfg = { @types.defaults.dba_create_window_function_cfg..., cfg..., } )\n    { name\n      start\n      step\n      inverse\n      result\n      directOnly\n      deterministic\n      varargs }     = cfg\n    @sqlt.aggregate name, { start, step, inverse, result, deterministic, varargs, directOnly, }\n    @_register_udf 'window', cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  create_table_function: ( cfg ) ->\n    @types.validate.dba_create_table_function_cfg ( cfg = { @types.defaults.dba_create_table_function_cfg..., cfg..., } )\n    { name\n      parameters\n      columns\n      rows\n      directOnly\n      deterministic\n      varargs }     = cfg\n    @sqlt.table name, { parameters, columns, rows, deterministic, varargs, directOnly, }\n    @_register_udf 'table_function', cfg\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  create_virtual_table: ( cfg ) ->\n    @types.validate.dba_create_virtual_table_cfg ( cfg = { @types.defaults.dba_create_virtual_table_cfg..., cfg..., } )\n    { name, create, } = cfg\n    @sqlt.table name, create\n    @_register_udf 'virtual_table', cfg\n    return null\n\n\n  #=========================================================================================================\n  # CONTEXT HANDLERS\n  #---------------------------------------------------------------------------------------------------------\n  with_transaction: ( cfg, f ) ->\n    switch arity = arguments.length\n      when 1 then [ cfg, f, ] = [ null, cfg, ]\n      when 2 then null\n      else throw new E.Dba_wrong_arity '^dba-functions@901^', 'with_transaction()', 1, 2, arity\n    @types.validate.dba_with_transaction_cfg ( cfg = { @types.defaults.dba_with_transaction_cfg..., cfg..., } )\n    @types.validate.function f\n    throw new E.Dba_no_nested_transactions '^dba-functions@901^' if @sqlt.inTransaction\n    @execute SQL\"begin #{cfg.mode} transaction;\"\n    error = null\n    try\n      R = f()\n    catch error\n      @execute SQL\"rollback;\"\n      throw error\n    try\n      @execute SQL\"commit;\"\n    catch error\n      @execute SQL\"rollback;\"\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  with_unsafe_mode: ( f ) ->\n    @types.validate.function f\n    unsafe_mode_state = @get_unsafe_mode()\n    @set_unsafe_mode true\n    try\n      R = f()\n    finally\n      @set_unsafe_mode unsafe_mode_state\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  with_foreign_keys_deferred: ( f ) ->\n    @types.validate.function f\n    R = null\n    throw new E.Dba_no_deferred_fks_in_tx '^dba-functions@901^' if @sqlt.inTransaction\n    @with_transaction =>\n      @sqlt.pragma SQL\"defer_foreign_keys=true\"\n      R = f()\n    return R\n\n\n"
  ]
}