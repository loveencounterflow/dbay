{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS-PARSER/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'icql_settings',\n  tests:\n    \"x is a object\":                          ( x ) -> @isa.object          x\n    # \"x has key 'db_path'\":                    ( x ) -> @has_key             x, 'db_path'\n    # \"x has key 'icql_path'\":                  ( x ) -> @has_key             x, 'icql_path'\n    \"x.db_path is a nonempty text\":           ( x ) -> @isa.nonempty_text x.db_path\n    \"x.icql_path is a nonempty text\":         ( x ) -> @isa.nonempty_text x.icql_path\n    \"x.echo? is a boolean\":                   ( x ) -> @isa_optional.boolean x.echo\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_entry_type',\n  tests:\n    \"x is a text\":                              ( x ) -> @isa.text    x\n    \"x is in 'procedure', 'query', 'fragment'\": ( x ) -> x in [ 'procedure', 'query', 'fragment', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_schema', ( x ) ->\n  ### NOTE to keep things simple, only allow lower case ASCII letters, digits, underscores in schemas ###\n  return false unless @isa.text x\n  return ( /^[a-z][a-z0-9_]*$/ ).test x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_not_temp_schema',  ( x ) -> ( @isa.ic_schema x ) and ( x isnt 'temp' )\n@declare 'ic_path',             ( x ) -> @isa.text x\n@declare 'ic_ram_path',         ( x ) -> ( @isa.ic_path x ) and ( x not in [ '', ':memory:', ] )\n@declare 'ic_name',             ( x ) -> @isa.nonempty_text x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_list_objects_ordering', ( x ) -> ( not x? ) or ( x is 'drop' )\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_format', ( x ) -> x in [ 'sql', 'db', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_open_cfg', tests:\n  \"x is an object\":                       ( x ) -> @isa.object          x\n  \"x.schema is a schema but not temp\":    ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"x.path is an ic_path\":                 ( x ) -> @isa.ic_path x.path\n  \"x.format? is an optional dba_format\":  ( x ) -> @isa_optional.dba_format x.format\n  \"x.save_as? is an optional ic_path\":    ( x ) -> @isa_optional.ic_path x.save_as\n  \"x.overwrite\":                          ( x ) -> @isa.boolean x.overwrite\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_import_cfg', tests:\n  \"x is an object\":                       ( x ) -> @isa.object          x\n  \"x.schema is a schema but not temp\":    ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"x.path is an ic_path\":                 ( x ) -> @isa.ic_path x.path\n  \"x.format? is an optional dba_format\":  ( x ) -> @isa_optional.dba_format x.format\n  \"x.save_as? is an optional ic_path\":    ( x ) -> @isa_optional.ic_path x.save_as\n  \"x.overwrite\":                          ( x ) -> @isa.boolean x.overwrite\n\n#-----------------------------------------------------------------------------------------------------------\n@defaults =\n  #.........................................................................................................\n  dba_constructor_cfg:\n    readonly:     false\n    create:       true\n    overwrite:    false\n    timeout:      5000\n  #.........................................................................................................\n  dba_open_cfg:\n    schema:     null\n    path:       ''\n    replace:    false\n  #.........................................................................................................\n  dba_import_cfg:\n    schema:     null\n    path:       null\n    format:     null\n    save_as:    null\n    overwrite:  false\n\n\n\n"
  ]
}