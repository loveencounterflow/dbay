{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,SAAA,GAA4B,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC;;EACpD,SAAA,GAA4B,IAAI,SAAJ,CAAc,MAAM,CAAC,OAArB;;EAC5B,GAAA,GAA4B,KAjB5B;;;EAoBA,IAAC,CAAA,OAAD,CAAS,eAAT,EACE;IAAA,KAAA,EACE;MAAA,eAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAqB,CAArB;MAAT,CAA1C;;;MAGA,8BAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAC,CAAC,OAArB;MAAT,CAH1C;MAIA,gCAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAC,CAAC,SAArB;MAAT,CAJ1C;MAKA,sBAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,OAAd,CAAsB,CAAC,CAAC,IAAxB;MAAT;IAL1C;EADF,CADF,EApBA;;;EA8BA,IAAC,CAAA,OAAD,CAAS,eAAT,EACE;IAAA,KAAA,EACE;MAAA,aAAA,EAA4C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,IAAL,CAAa,CAAb;MAAT,CAA5C;MACA,0CAAA,EAA4C,QAAA,CAAE,CAAF,CAAA;eAAS,MAAO,eAAP,MAAoB,WAApB,MAA6B;MAAtC;IAD5C;EADF,CADF,EA9BA;;;EAoCA,IAAC,CAAA,OAAD,CAAS,WAAT,EAAsB,QAAA,CAAE,CAAF,CAAA;IAEpB,KAAoB,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV,CAApB;;AAAA,aAAO,MAAP;;AACA,WAAS,oBAAsB,CAAC,IAAzB,CAA8B,CAA9B;EAHa,CAAtB,EApCA;;;EA0CA,IAAC,CAAA,OAAD,CAAS,oBAAT,EAAgC,QAAA,CAAE,CAAF,CAAA;WAAS,CAAE,IAAC,CAAA,GAAG,CAAC,SAAL,CAAe,CAAf,CAAF,CAAA,IAAyB,CAAE,CAAA,KAAO,MAAT;EAAlC,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,SAAT,EAAgC,QAAA,CAAE,CAAF,CAAA;WAAS,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV;EAAT,CAAhC;;EACA,IAAC,CAAA,OAAD,CAAS,SAAT,EAAgC,QAAA,CAAE,CAAF,CAAA;WAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAnB;EAAT,CAAhC,EA5CA;;;EA+CA,IAAC,CAAA,OAAD,CAAS,cAAT,EAAgC,QAAA,CAAE,CAAF,CAAA;WAAS,MAAO,QAAP,MAAa,MAAb,MAAiB;EAA1B,CAAhC,EA/CA;;;EAkDA,IAAC,CAAA,OAAD,CAAS,2BAAT,EAAsC,QAAA,CAAE,CAAF,CAAA;WAAS,CAAM,SAAN,CAAA,IAAc,CAAE,CAAA,KAAK,MAAP;EAAvB,CAAtC,EAlDA;;;EAqDA,IAAC,CAAA,OAAD,CAAS,YAAT,EAAuB,QAAA,CAAE,CAAF,CAAA;WAAS,MAAO,SAAP,MAAc;EAAvB,CAAvB,EArDA;;;EAwDA,IAAC,CAAA,OAAD,CAAS,qBAAT,EAAgC;IAAA,KAAA,EAC9B;MAAA,gBAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAqB,CAArB;MAAT,CAAxC;MACA,+BAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,SAAL,CAAqB,CAAC,CAAC,YAAvB;MAAT;IADxC;EAD8B,CAAhC,EAxDA;;;EA6DA,IAAC,CAAA,OAAD,CAAS,cAAT,EAAyB;IAAA,KAAA,EACvB;MAAA,eAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAAxC;MACA,kCAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,MAA1B;MAAT,CADxC;MAEA,8BAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,OAAd,CAAsB,CAAC,CAAC,IAAxB;MAAT,CAFxC;MAGA,oBAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAC,CAAC,GAAf;MAAT;IAHxC;EADuB,CAAzB,EA7DA;;;;;;EAsEA,IAAC,CAAA,OAAD,CAAS,gBAAT,EAA2B;IAAA,KAAA,EACzB;MAAA,eAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA/C;MACA,kCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,MAA1B;MAAT,CAD/C;MAEA,qBAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAC,CAAC,IAAf;MAAT,CAF/C;MAGA,mCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,UAAd,CAAyB,CAAC,CAAC,MAA3B;MAAT,CAH/C;MAIA,oCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;AAAQ,YAAA;sBAAC,CAAC,CAAC,YAAY,YAAd,QAAwB;MAAjC,CAJ/C;MAKA,6CAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,gBAAd,CAA+B,CAAC,CAAC,UAAjC;MAAT;IAL/C;EADyB,CAA3B,EAtEA;;;;;EAgFA,IAAC,CAAA,OAAD,CAAS,cAAT,EAAyB;IAAA,KAAA,EACvB;MAAA,eAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA/C;MACA,kCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,MAA1B;MAAT,CAD/C;MAEA,8BAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,OAAd,CAAsB,CAAC,CAAC,IAAxB;MAAT,CAF/C;MAGA,mCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,UAAd,CAAyB,CAAC,CAAC,MAA3B;MAAT;IAH/C;EADuB,CAAzB,EAhFA;;;EAuFA,IAAC,CAAA,OAAD,CAAS,uBAAT,EAAkC;IAAA,KAAA,EAChC;MAAA,eAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA/C;MACA,kCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,MAA1B;MAAT,CAD/C;MAEA,8BAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,OAAd,CAAsB,CAAC,CAAC,IAAxB;MAAT;IAF/C;EADgC,CAAlC,EAvFA;;;EA6FA,IAAC,CAAA,OAAD,CAAS,gBAAT,EAA2B;IAAA,KAAA,EACzB;MAAA,eAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA/C;MACA,kCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,MAA1B;MAAT,CAD/C;MAEA,qBAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAC,CAAC,IAAf;MAAT,CAF/C;MAGA,mCAAA,EAA+C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,YAAY,CAAC,UAAd,CAAyB,CAAC,CAAC,MAA3B;MAAT;IAH/C;EADyB,CAA3B,EA7FA;;;EAoGA,IAAC,CAAA,OAAD,CAAS,gBAAT,EAA2B;IAAA,KAAA,EACzB;MAAA,eAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAAlD;MACA,kCAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,MAA1B;MAAT,CADlD;MAEA,qBAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAC,CAAC,IAAf;MAAT,CAFlD;MAGA,+CAAA,EAAkD,QAAA,CAAE,CAAF,CAAA;eAAS,CAAE,CAAC,CAAC,MAAF,KAAY,IAAd,CAAA,IAAwB,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,CAAC,CAAC,MAAf;MAAjC;IAHlD;EADyB,CAA3B,EApGA;;;EA2GA,IAAC,CAAA,OAAD,CAAS,yBAAT,EAAoC;IAAA,KAAA,EAClC;MAAA,eAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA1C;MACA,uCAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,WAA1B;MAAT,CAD1C;MAEA,qCAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,kBAAL,CAAwB,CAAC,CAAC,SAA1B;MAAT;IAF1C;EADkC,CAApC,EA3GA;;;EAiHA,IAAC,CAAA,OAAD,CAAS,mBAAT,EAA8B;IAAA,KAAA,EAC5B;MAAA,eAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA1C;MACA,yBAAA,EAA0C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,SAAL,CAAe,CAAC,CAAC,MAAjB;MAAT;IAD1C;EAD4B,CAA9B,EAjHA;;;EAsHA,IAAC,CAAA,OAAD,CAAS,KAAT,EAAgB;IAAA,KAAA,EACd;MAAA,kBAAA,EAAwC,QAAA,CAAE,CAAF,CAAA;eAAS,CAAA,YAAa,eAAE,MAAA,MAAO,CAAE,OAAA,CAAQ,QAAR,CAAF,CAAoB,CAAC,GAA9B;MAAtB;IAAxC;EADc,CAAhB,EAtHA;;;EA0HA,IAAC,CAAA,QAAD,GAEE,CAAA;;IAAA,mBAAA,EACE;MAAA,YAAA,EAAc,YAAd;MACA,QAAA,EAAc,KADd;MAEA,MAAA,EAAc,IAFd;MAGA,SAAA,EAAc,KAHd;MAIA,OAAA,EAAc;IAJd,CADF;;IAOA,cAAA,EACE;MAAA,MAAA,EAAY,IAAZ;MACA,IAAA,EAAY,EADZ;MAEA,MAAA,EAAY;IAFZ,CARF;;IAYA,YAAA,EACE;MAAA,MAAA,EAAY,IAAZ;MACA,IAAA,EAAY,IADZ;MAEA,GAAA,EAAY;IAFZ,CAbF;;;;IAmBA,cAAA,EACE;MAAA,MAAA,EAAY,IAAZ;MACA,IAAA,EAAY,IADZ;MAEA,MAAA,EAAY;IAFZ,CApBF;;IAwBA,YAAA,EACE;MAAA,MAAA,EAAY,IAAZ;MACA,IAAA,EAAY,IADZ;MAEA,MAAA,EAAY;IAFZ,CAzBF;;IA6BA,qBAAA,EACE;MAAA,MAAA,EAAY,IAAZ;MACA,IAAA,EAAY;IADZ,CA9BF;;IAiCA,cAAA,EACE;MAAA,MAAA,EAAY,IAAZ;MACA,IAAA,EAAY,IADZ;MAEA,MAAA,EAAY,IAFZ;MAGA,MAAA,EAAY,QAHZ;MAIA,UAAA,EAAY;IAJZ,CAlCF;;;IAyCA,uBAAA,EACE;MAAA,WAAA,EAAc,IAAd;MACA,SAAA,EAAc;IADd,CA1CF;;IA6CA,iBAAA,EACE;MAAA,MAAA,EAAc;IAAd,CA9CF;;IAgDA,sBAAA,EACE;MAAA,EAAA,EAAc,QAAd;MACA,MAAA,EAAc,QADd;MAEA,QAAA,EAAc,QAFd;MAGA,GAAA,EAAc;IAHd;EAjDF;AA5HF",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'MKTS-PARSER/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\nDba                       = null\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'icql_settings',\n  tests:\n    \"x is a object\":                          ( x ) -> @isa.object          x\n    # \"x has key 'db_path'\":                    ( x ) -> @has_key             x, 'db_path'\n    # \"x has key 'icql_path'\":                  ( x ) -> @has_key             x, 'icql_path'\n    \"x.db_path is a nonempty text\":           ( x ) -> @isa.nonempty_text x.db_path\n    \"x.icql_path is a nonempty text\":         ( x ) -> @isa.nonempty_text x.icql_path\n    \"x.echo? is a boolean\":                   ( x ) -> @isa_optional.boolean x.echo\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_entry_type',\n  tests:\n    \"x is a text\":                              ( x ) -> @isa.text    x\n    \"x is in 'procedure', 'query', 'fragment'\": ( x ) -> x in [ 'procedure', 'query', 'fragment', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_schema', ( x ) ->\n  ### NOTE to keep things simple, only allow lower case ASCII letters, digits, underscores in schemas ###\n  return false unless @isa.text x\n  return ( /^[a-z_][a-z0-9_]*$/ ).test x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'ic_not_temp_schema',  ( x ) -> ( @isa.ic_schema x ) and ( x isnt 'temp' )\n@declare 'ic_path',             ( x ) -> @isa.text x\n@declare 'ic_name',             ( x ) -> @isa.nonempty_text x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_ram_path',        ( x ) -> x in [ null, '', ':memory:', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_list_objects_ordering', ( x ) -> ( not x? ) or ( x is 'drop' )\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_format', ( x ) -> x in [ 'sql', 'sqlite', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_constructor_cfg', tests:\n  \"x is an object\":                       ( x ) -> @isa.object          x\n  \"x._temp_prefix is a ic_schema\":        ( x ) -> @isa.ic_schema       x._temp_prefix\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_open_cfg', tests:\n  \"@isa.object x\":                        ( x ) -> @isa.object x\n  \"@isa.ic_not_temp_schema x.schema\":     ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"@isa_optional.ic_path x.path\":         ( x ) -> @isa_optional.ic_path x.path\n  \"@isa.boolean x.ram\":                   ( x ) -> @isa.boolean x.ram\n  # \"@isa.boolean x.overwrite\":             ( x ) -> @isa.boolean x.overwrite\n  # \"@isa.boolean x.create\":                ( x ) -> @isa.boolean x.create\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_import_cfg', tests:\n  \"@isa.object x\":                               ( x ) -> @isa.object x\n  \"@isa.ic_not_temp_schema x.schema\":            ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"@isa.ic_path x.path\":                         ( x ) -> @isa.ic_path x.path\n  \"@isa_optional.dba_format x.format\":           ( x ) -> @isa_optional.dba_format x.format\n  \"x.method in [ 'single', 'batch', ]\":          ( x ) -> x.method in [ 'single', 'batch', ]\n  \"@isa_optional.positive_integer x.batch_size\": ( x ) -> @isa_optional.positive_integer x.batch_size\n  # \"x.overwrite is a boolean\":             ( x ) -> @isa.boolean x.overwrite\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_save_cfg', tests:\n  \"@isa.object x\":                               ( x ) -> @isa.object x\n  \"@isa.ic_not_temp_schema x.schema\":            ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"@isa_optional.ic_path x.path\":                ( x ) -> @isa_optional.ic_path x.path\n  \"@isa_optional.dba_format x.format\":           ( x ) -> @isa_optional.dba_format x.format\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_vacuum_atomically', tests:\n  \"@isa.object x\":                               ( x ) -> @isa.object x\n  \"@isa.ic_not_temp_schema x.schema\":            ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"@isa_optional.ic_path x.path\":                ( x ) -> @isa_optional.ic_path x.path\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_export_cfg', tests:\n  \"@isa.object x\":                               ( x ) -> @isa.object x\n  \"@isa.ic_not_temp_schema x.schema\":            ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"@isa.ic_path x.path\":                         ( x ) -> @isa.ic_path x.path\n  \"@isa_optional.dba_format x.format\":           ( x ) -> @isa_optional.dba_format x.format\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_attach_cfg', tests:\n  \"@isa.object x\":                                  ( x ) -> @isa.object x\n  \"@isa.ic_not_temp_schema x.schema\":               ( x ) -> @isa.ic_not_temp_schema x.schema\n  \"@isa.ic_path x.path\":                            ( x ) -> @isa.ic_path x.path\n  \"( x.saveas is null ) or @isa.ic_path x.saveas\":  ( x ) -> ( x.saveas is null ) or @isa.ic_path x.saveas\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'copy_or_move_schema_cfg', tests:\n  \"@isa.object x\":                          ( x ) -> @isa.object x\n  \"@isa.ic_not_temp_schema x.from_schema\":  ( x ) -> @isa.ic_not_temp_schema x.from_schema\n  \"@isa.ic_not_temp_schema x.to_schema\":    ( x ) -> @isa.ic_not_temp_schema x.to_schema\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba_is_ram_db_cfg', tests:\n  \"@isa.object x\":                          ( x ) -> @isa.object x\n  \"@isa.ic_schema x.schema\":                ( x ) -> @isa.ic_schema x.schema\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dba', tests:\n  \"x instanceof Dba\":                     ( x ) -> x instanceof ( Dba ?= ( require './main' ).Dba )\n\n#-----------------------------------------------------------------------------------------------------------\n@defaults =\n  #.........................................................................................................\n  dba_constructor_cfg:\n    _temp_prefix: '_dba_temp_'\n    readonly:     false\n    create:       true\n    overwrite:    false\n    timeout:      5000\n  #.........................................................................................................\n  dba_attach_cfg:\n    schema:     null\n    path:       ''\n    saveas:     null\n  #.........................................................................................................\n  dba_open_cfg:\n    schema:     null\n    path:       null\n    ram:        false\n    # overwrite:  false\n    # create:     true\n  #.........................................................................................................\n  dba_export_cfg:\n    schema:     null\n    path:       null\n    format:     null\n  #.........................................................................................................\n  dba_save_cfg:\n    schema:     null\n    path:       null\n    format:     null\n  #.........................................................................................................\n  dba_vacuum_atomically:\n    schema:     null\n    path:       null\n  #.........................................................................................................\n  dba_import_cfg:\n    schema:     null\n    path:       null\n    format:     null\n    method:     'single'\n    batch_size: 1000\n    # overwrite:  false\n  #.........................................................................................................\n  copy_or_move_schema_cfg:\n    from_schema:  null\n    to_schema:    null\n  #.........................................................................................................\n  dba_is_ram_db_cfg:\n    schema:       null\n  #.........................................................................................................\n  extensions_and_formats:\n    db:           'sqlite'\n    sqlite:       'sqlite'\n    sqlitedb:     'sqlite'\n    sql:          'sql'\n\n\n\n\n\n\n"
  ]
}