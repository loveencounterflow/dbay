{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\nDba                       = null\n\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_schema', ( x ) ->\n  ### NOTE to keep things simple, only allow lower case ASCII letters, digits, underscores in schemas ###\n  return false unless @isa.text x\n  return ( /^[a-z_][a-z0-9_]*$/ ).test x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_usr_schema',     ( x ) -> ( @isa.dbay_schema x ) and ( x not in [ 'main', 'temp', ] )\n@declare 'dbay_path',           ( x ) -> @isa.text x\n@declare 'dbay_name',           ( x ) -> @isa.nonempty_text x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'constructor_cfg', tests:\n  \"@isa.object x\":                            ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.path\":                ( x ) -> @isa.nonempty_text x.path\n  \"@isa.boolean x.temporary\":                 ( x ) -> @isa.boolean x.temporary\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_with_transaction_cfg', tests:\n  \"@isa.object x\":                                    ( x ) -> @isa.object x\n  \"x.mode in [ 'deferred', 'immediate', 'exclusive', ]\": \\\n    ( x ) -> x.mode in [ 'deferred', 'immediate', 'exclusive', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_open_cfg', tests:\n  \"@isa.object x\":                        ( x ) -> @isa.object x\n  \"@isa.dbay_usr_schema x.schema\":        ( x ) -> @isa.dbay_usr_schema x.schema\n  \"@isa_optional.dbay_path x.path\":       ( x ) -> @isa_optional.dbay_path x.path\n  \"@isa.boolean x.temporary\":             ( x ) -> @isa.boolean x.temporary\n  # \"@isa.boolean x.overwrite\":             ( x ) -> @isa.boolean x.overwrite\n  # \"@isa.boolean x.create\":                ( x ) -> @isa.boolean x.create\n\n\n#===========================================================================================================\n# UDF\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_create_function_cfg', tests:\n  \"@isa.object x\":                  ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.name\":      ( x ) -> @isa.nonempty_text x.name\n  \"@isa.function x.call\":           ( x ) -> @isa.function x.call\n  \"@isa.boolean x.deterministic\":   ( x ) -> @isa.boolean x.deterministic\n  \"@isa.boolean x.varargs\":         ( x ) -> @isa.boolean x.varargs\n  \"@isa.boolean x.directOnly\":      ( x ) -> @isa.boolean x.directOnly\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_create_aggregate_function_cfg', tests:\n  \"@isa.object x\":                  ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.name\":      ( x ) -> @isa.nonempty_text x.name\n  # \"@isa.any x.start\":               ( x ) -> @isa.any x.start\n  \"@isa.function x.step\":           ( x ) -> @isa.function x.step\n  \"@isa.boolean x.deterministic\":   ( x ) -> @isa.boolean x.deterministic\n  \"@isa.boolean x.varargs\":         ( x ) -> @isa.boolean x.varargs\n  \"@isa.boolean x.directOnly\":      ( x ) -> @isa.boolean x.directOnly\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_create_window_function_cfg', tests:\n  \"@isa.object x\":                    ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.name\":        ( x ) -> @isa.nonempty_text x.name\n  # \"@isa.any x.start\":                 ( x ) -> @isa.any x.start\n  \"@isa.function x.step\":             ( x ) -> @isa.function x.step\n  \"@isa.function x.inverse\":          ( x ) -> @isa.function x.inverse\n  \"@isa_optional.function x.result\":  ( x ) -> @isa_optional.function x.result\n  \"@isa.boolean x.deterministic\":     ( x ) -> @isa.boolean x.deterministic\n  \"@isa.boolean x.varargs\":           ( x ) -> @isa.boolean x.varargs\n  \"@isa.boolean x.directOnly\":        ( x ) -> @isa.boolean x.directOnly\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_create_table_function_cfg', tests:\n  \"@isa.object x\":                    ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.name\":        ( x ) -> @isa.nonempty_text x.name\n  \"@isa_optional.list x.columns\":     ( x ) -> @isa_optional.list x.columns\n  \"@isa_optional.list x.parameters\":  ( x ) -> @isa_optional.list x.parameters\n  \"@isa.generatorfunction x.rows\":    ( x ) -> @isa.generatorfunction x.rows\n  \"@isa.boolean x.deterministic\":     ( x ) -> @isa.boolean x.deterministic\n  \"@isa.boolean x.varargs\":           ( x ) -> @isa.boolean x.varargs\n  \"@isa.boolean x.directOnly\":        ( x ) -> @isa.boolean x.directOnly\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'dbay_create_virtual_table_cfg', tests:\n  \"@isa.object x\":                    ( x ) -> @isa.object x\n  \"@isa.nonempty_text x.name\":        ( x ) -> @isa.nonempty_text x.name\n  \"@isa.function x.create\":           ( x ) -> @isa.function x.create\n\n\n\n\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n############################################################################################################\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'ic_entry_type',\n#   tests:\n#     \"x is a text\":                              ( x ) -> @isa.text    x\n#     \"x is in 'procedure', 'query', 'fragment'\": ( x ) -> x in [ 'procedure', 'query', 'fragment', ]\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_ram_path',        ( x ) -> x in [ null, '', ':memory:', ]\n\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_import_cfg', tests:\n#   \"@isa.object x\":                                ( x ) -> @isa.object x\n#   \"@isa.dbay_usr_schema x.schema\":             ( x ) -> @isa.dbay_usr_schema x.schema\n#   \"@isa.dbay_path x.path\":                          ( x ) -> @isa.dbay_path x.path\n#   \"@isa_optional.dba_format x.format\":            ( x ) -> @isa_optional.dba_format x.format\n#   \"x.method in [ 'single', 'batch', ]\":           ( x ) -> x.method in [ 'single', 'batch', ]\n#   \"@isa_optional.positive_integer x.batch_size\":  ( x ) -> @isa_optional.positive_integer x.batch_size\n#   # \"x.overwrite is a boolean\":             ( x ) -> @isa.boolean x.overwrite\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_import_cfg_csv', tests:\n#   \"@isa.dba_import_cfg x\":                        ( x ) -> @isa.dba_import_cfg x\n#   \"@isa.dbay_name x.table_name\":                    ( x ) -> @isa.dbay_name x.table_name\n#   ### NOTE see `_import_csv()`; for now only RAM DBs allowed for imported CSV ###\n#   \"@isa.true x.ram\":                              ( x ) -> @isa.true x.ram\n#   # \"@isa.boolean x.skip_first\":                    ( x ) -> @isa.boolean x.skip_first\n#   # \"@isa.boolean x.skip_empty\":                    ( x ) -> @isa.boolean x.skip_empty\n#   # \"@isa.boolean x.skip_blank\":                    ( x ) -> @isa.boolean x.skip_blank\n#   \"@isa.boolean x.skip_any_null\":                 ( x ) -> @isa.boolean x.skip_any_null\n#   \"@isa.boolean x.skip_all_null\":                 ( x ) -> @isa.boolean x.skip_all_null\n#   \"@isa.boolean x.trim\":                          ( x ) -> @isa.boolean x.trim\n#   \"@isa.any x.default_value\":                     ( x ) -> true\n#   \"@isa_optional.object x._extra\":                ( x ) -> @isa_optional.object x._extra\n#   \"x.table is deprecated\":                        ( x ) -> x.table is undefined\n#   \"x.columns is deprecated\":                      ( x ) -> x.columns is undefined\n#   \"x.transform is a function (sync or async)\":    ( x ) ->\n#     return true if ( not x.transform? )\n#     return true if @isa.asyncfunction x.transform\n#     return true if @isa.function x.transform\n#     return false\n#   \"x.skip_comments is a boolean or a nonempty_text\": ( x ) ->\n#     ( @isa.boolean x.skip_comments ) or ( @isa.nonempty_text x.skip_comments )\n#   \"optional input_columns isa nonempty list of nonempty text\": ( x ) ->\n#     { input_columns: d, } = x\n#     return true if not d?\n#     return true if d is true\n#     return false unless @isa.list d\n#     return false unless d.length > 0\n#     return false unless @isa_list_of.nonempty_text d\n#     return true\n#   \"optional table_columns isa nonempty list of nonempty text\": ( x ) ->\n#     { table_columns: d, } = x\n#     return true if not d?\n#     switch @type_of d\n#       when 'list'\n#         return false unless d.length > 0\n#         return false unless @isa_list_of.nonempty_text d\n#       when 'object'\n#         k = ( k for k, v of d )\n#         return false unless k.length > 0\n#         return false unless @isa_list_of.nonempty_text k\n#         v = ( v for k, v of d )\n#         return false unless v.length > 0\n#         return false unless @isa_list_of.nonempty_text v\n#       else\n#         return false\n#     return true\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_import_cfg_csv_extra', tests:\n#   ### see https://csv.js.org/parse/options/ ###\n#   ### relying on `csv-parse` to do the right thing ###\n#   \"@isa_optional.object x\":                       ( x ) -> @isa_optional.object x\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_save_cfg', tests:\n#   \"@isa.object x\":                               ( x ) -> @isa.object x\n#   \"@isa.dbay_usr_schema x.schema\":            ( x ) -> @isa.dbay_usr_schema x.schema\n#   \"@isa_optional.dbay_path x.path\":                ( x ) -> @isa_optional.dbay_path x.path\n#   \"@isa_optional.dba_format x.format\":           ( x ) -> @isa_optional.dba_format x.format\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_vacuum_atomically', tests:\n#   \"@isa.object x\":                               ( x ) -> @isa.object x\n#   \"@isa.dbay_usr_schema x.schema\":            ( x ) -> @isa.dbay_usr_schema x.schema\n#   \"@isa_optional.dbay_path x.path\":                ( x ) -> @isa_optional.dbay_path x.path\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_export_cfg', tests:\n#   \"@isa.object x\":                               ( x ) -> @isa.object x\n#   \"@isa.dbay_usr_schema x.schema\":            ( x ) -> @isa.dbay_usr_schema x.schema\n#   \"@isa.dbay_path x.path\":                         ( x ) -> @isa.dbay_path x.path\n#   \"@isa_optional.dba_format x.format\":           ( x ) -> @isa_optional.dba_format x.format\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_attach_cfg', tests:\n#   \"@isa.object x\":                                  ( x ) -> @isa.object x\n#   \"@isa.dbay_usr_schema x.schema\":               ( x ) -> @isa.dbay_usr_schema x.schema\n#   \"@isa.dbay_path x.path\":                            ( x ) -> @isa.dbay_path x.path\n#   \"( x.saveas is null ) or @isa.dbay_path x.saveas\":  ( x ) -> ( x.saveas is null ) or @isa.dbay_path x.saveas\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'copy_or_move_schema_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_usr_schema x.from_schema\":  ( x ) -> @isa.dbay_usr_schema x.from_schema\n#   \"@isa.dbay_usr_schema x.to_schema\":    ( x ) -> @isa.dbay_usr_schema x.to_schema\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_is_ram_db_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_detach_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_has_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_is_empty_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n#   \"@isa.nonempty_text x.name\":              ( x ) -> @isa_optional.dbay_name x.name\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_clear_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_walk_objects_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n#   \"x._ordering is optionally 'drop'\":       ( x ) -> ( not x._ordering? ) or ( x._ordering is 'drop' )\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_type_of_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n#   \"@isa.nonempty_text x.name\":              ( x ) -> @isa_optional.dbay_name x.name\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_fields_of_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n#   \"@isa.nonempty_text x.name\":              ( x ) -> @isa_optional.dbay_name x.name\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_field_names_of_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n#   \"@isa.nonempty_text x.name\":              ( x ) -> @isa_optional.dbay_name x.name\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'sql_limit', ( x ) ->\n#   return true unless x?\n#   return true if @isa.nonempty_text x\n#   return true if @isa.cardinal x\n#   return false\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_dump_relation_cfg', tests:\n#   \"@isa.object x\":                          ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.schema\":                ( x ) -> @isa.dbay_schema x.schema\n#   \"@isa.nonempty_text x.name\":              ( x ) -> @isa_optional.dbay_name x.name\n#   \"@isa.nonempty_text x.order_by\":          ( x ) -> @isa.nonempty_text x.order_by\n#   \"@isa.sql_limit x.limit\":                 ( x ) -> @isa.sql_limit x.limit\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba', tests:\n#   \"x instanceof Dba\":                     ( x ) -> x instanceof ( Dba ?= ( require './main' ).Dba )\n\n# #-----------------------------------------------------------------------------------------------------------\n# @declare 'dba_create_stdlib_cfg', tests:\n#   \"@isa.object x\":                        ( x ) -> @isa.object x\n#   \"@isa.dbay_schema x.prefix\":              ( x ) -> @isa.dbay_schema x.prefix\n\n# #-----------------------------------------------------------------------------------------------------------\n# @defaults =\n#   #.........................................................................................................\n#   dba_constructor_cfg:\n#     _temp_prefix: '_dba_temp_'\n#     readonly:     false\n#     create:       true\n#     overwrite:    false\n#     timeout:      5000\n#     # schema:       'main'\n#     path:         null\n#     ram:          false\n#   #.........................................................................................................\n#   dba_attach_cfg:\n#     schema:     null\n#     path:       ''\n#     saveas:     null\n#   #.........................................................................................................\n#   dba_detach_cfg:\n#     schema:     null\n#   #.........................................................................................................\n#   dba_has_cfg:\n#     schema:     null\n#   #.........................................................................................................\n#   dba_open_cfg:\n#     schema:     'main'\n#     path:       null\n#     ram:        false\n#     # overwrite:  false\n#     # create:     true\n#   #.........................................................................................................\n#   dba_export_cfg:\n#     schema:     null\n#     path:       null\n#     format:     null\n#   #.........................................................................................................\n#   dba_save_cfg:\n#     schema:     null\n#     path:       null\n#     format:     null\n#   #.........................................................................................................\n#   dba_vacuum_atomically:\n#     schema:     null\n#     path:       null\n#   #.........................................................................................................\n#   dba_import_cfg:\n#     schema:     null\n#     path:       null\n#     format:     null\n#     method:     'single'\n#     batch_size: 1000\n#   #.........................................................................................................\n#   dba_import_cfg_csv:\n#     table_name:       'main'\n#     transform:        null\n#     _extra:           null\n#     skip_any_null:    false\n#     skip_all_null:    false\n#     skip_comments:    false\n#     trim:             true\n#     default_value:    null\n#     # skip_first:       false\n#     # skip_empty:       true\n#     # skip_blank:       true\n#   #.........................................................................................................\n#   dba_import_cfg_csv_extra:\n#     ### see https://github.com/mafintosh/csv-parser#options ###\n#     headers:          false       # Array[String] | Boolean\n#     escape:           '\"'         # String, default: \"\n#     # mapHeaders:       null        # Function\n#     # mapValues:        null        # Function (not used as it calls for each cell instead of for each row)\n#     newline:          '\\n'        # String, default: '\\n'\n#     quote:            '\"'         # String, default: '\"'\n#     raw:              false       # Boolean, default: false\n#     separator:        ','         # String, Default: ','\n#     skipComments:     false       # Boolean | String, default: false\n#     skipLines:        0           # Number, default: 0\n#     maxRowBytes:      Infinity    # Number, Default: Number.MAX_SAFE_INTEGER\n#     strict:           false       # Boolean, default: false\n#   #.........................................................................................................\n#   dba_import_cfg_tsv_extra:\n#     ### see https://github.com/mafintosh/csv-parser#options ###\n#     headers:          false       # Array[String] | Boolean\n#     escape:           ''          # String, default: \"\n#     # mapHeaders:       null        # Function\n#     # mapValues:        null        # Function (not used as it calls for each cell instead of for each row)\n#     newline:          '\\n'        # String, default: '\\n'\n#     quote:            ''          # String, default: '\"'\n#     raw:              false       # Boolean, default: false\n#     separator:        '\\t'         # String, Default: ','\n#     skipComments:     false       # Boolean | String, default: false\n#     skipLines:        0           # Number, default: 0\n#     maxRowBytes:      Infinity    # Number, Default: Number.MAX_SAFE_INTEGER\n#     strict:           false       # Boolean, default: false\n#   #.........................................................................................................\n#   copy_or_move_schema_cfg:\n#     from_schema:  null\n#     to_schema:    null\n#   #.........................................................................................................\n#   dba_is_ram_db_cfg:\n#     schema:       null\n#   #.........................................................................................................\n#   dba_clear_cfg:\n#     schema:       null\n#   #.........................................................................................................\n#   dba_walk_objects_cfg:\n#     schema:       null\n#     _ordering:    null\n#   #.........................................................................................................\n#   extensions_and_formats:\n#     db:           'sqlite'\n#     sqlite:       'sqlite'\n#     sqlitedb:     'sqlite'\n#     sql:          'sql'\n#     txt:          'tsv'\n#     tsv:          'tsv'\n#     csv:          'csv'\n#   #.........................................................................................................\n#   dba_type_of_cfg:\n#     schema:       null\n#     name:         null\n#   #.........................................................................................................\n#   dba_fields_of_cfg:\n#     schema:       null\n#     name:         null\n#   #.........................................................................................................\n#   dba_field_names_of_cfg:\n#     schema:       null\n#     name:         null\n#   #.........................................................................................................\n#   dba_dump_relation_cfg:\n#     schema:       null\n#     name:         null\n#     order_by:     'random()'\n#     limit:        10\n#   #.........................................................................................................\n#   dba_create_stdlib_cfg:\n#     prefix:       'std_'\n\n# #-----------------------------------------------------------------------------------------------------------\n# @_import_formats = _import_formats = new Set Object.keys @defaults.extensions_and_formats\n# @declare 'dba_format', ( x ) -> _import_formats.has x\n\n\n\n\n"
  ]
}