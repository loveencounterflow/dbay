{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/errors.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/ERRORS'\n# debug                     = CND.get_logger 'debug',     badge\n# warn                      = CND.get_logger 'warn',      badge\n# info                      = CND.get_logger 'info',      badge\n# urge                      = CND.get_logger 'urge',      badge\n# help                      = CND.get_logger 'help',      badge\n# whisper                   = CND.get_logger 'whisper',   badge\n# echo                      = CND.echo.bind CND\n\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Dbay_error extends Error\n  constructor: ( ref, message ) ->\n    super()\n    @message  = \"#{ref} (#{@constructor.name}) #{message}\"\n    @ref      = ref\n    return undefined ### always return `undefined` from constructor ###\n\n#-----------------------------------------------------------------------------------------------------------\nclass @Dbay_cfg_error                 extends @Dbay_error\n  constructor: ( ref, message )     -> super ref, message\nclass @Dbay_internal_error            extends @Dbay_error\n  constructor: ( ref, message )     -> super ref, message\nclass @Dbay_schema_exists             extends @Dbay_error\n  constructor: ( ref, schema )      -> super ref, \"schema #{rpr schema} already exists\"\nclass @Dbay_schema_unknown            extends @Dbay_error\n  constructor: ( ref, schema )      -> super ref, \"schema #{rpr schema} does not exist\"\nclass @Dbay_object_unknown            extends @Dbay_error\n  constructor: ( ref, schema, name )-> super ref, \"object #{rpr schema + '.' + name} does not exist\"\nclass @Dbay_schema_nonempty           extends @Dbay_error\n  constructor: ( ref, schema )      -> super ref, \"schema #{rpr schema} isn't empty\"\nclass @Dbay_schema_not_allowed        extends @Dbay_error\n  constructor: ( ref, schema )      -> super ref, \"schema #{rpr schema} not allowed here\"\nclass @Dbay_schema_repeated           extends @Dbay_error\n  constructor: ( ref, schema )      -> super ref, \"unable to copy schema to itself, got #{rpr schema}\"\nclass @Dbay_expected_one_row          extends @Dbay_error\n  constructor: ( ref, row_count )   -> super ref, \"expected 1 row, got #{row_count}\"\nclass @Dbay_extension_unknown         extends @Dbay_error\n  constructor: ( ref, path )        -> super ref, \"extension of path #{path} is not registered for any format\"\nclass @Dbay_not_implemented           extends @Dbay_error\n  constructor: ( ref, what )        -> super ref, \"#{what} isn't implemented (yet)\"\nclass @Dbay_deprecated                extends @Dbay_error\n  constructor: ( ref, what )        -> super ref, \"#{what} has been deprecated\"\nclass @Dbay_unexpected_db_object_type extends @Dbay_error\n  constructor: ( ref, type, value ) -> super ref, \"Âµ769 unknown type #{rpr type} of DB object #{d}\"\nclass @Dbay_sql_value_error           extends @Dbay_error\n  constructor: ( ref, type, value ) -> super ref, \"unable to express a #{type} as SQL literal, got #{rpr value}\"\nclass @Dbay_sql_not_a_list_error      extends @Dbay_error\n  constructor: ( ref, type, value ) -> super ref, \"expected a list, got a #{type}\"\nclass @Dbay_unexpected_sql            extends @Dbay_error\n  constructor: ( ref, sql )         -> super ref, \"unexpected SQL string #{rpr sql}\"\nclass @Dbay_sqlite_too_many_dbs       extends @Dbay_error\n  constructor: ( ref, schema )      -> super ref, \"unable to attach schema #{rpr schema}: too many attached databases\"\nclass @Dbay_sqlite_error              extends @Dbay_error\n  constructor: ( ref, error )       -> super ref, \"#{error.code ? 'SQLite error'}: #{error.message}\"\nclass @Dbay_no_arguments_allowed      extends @Dbay_error\n  constructor: ( ref, name, arity ) -> super ref, \"method #{name} doesn't take arguments, got #{arity}\"\nclass @Dbay_argument_not_allowed      extends @Dbay_error\n  constructor: ( ref, name, value ) -> super ref, \"argument #{name} not allowed, got #{rpr value}\"\nclass @Dbay_wrong_arity               extends @Dbay_error\n  constructor: ( ref, name, min, max, found ) -> super ref, \"#{name} expected between #{min} and #{max} arguments, got #{found}\"\nclass @Dbay_empty_csv                 extends @Dbay_error\n  constructor: ( ref, path )        -> super ref, \"no CSV records found in file #{path}\"\nclass @Dbay_interpolation_format_unknown extends @Dbay_error\n  constructor: ( ref, format )      -> super ref, \"unknown interpolation format #{rpr format}\"\nclass @Dbay_no_nested_transactions    extends @Dbay_error\n  constructor: ( ref )              -> super ref, \"cannot start a transaction within a transaction\"\nclass @Dbay_no_deferred_fks_in_tx     extends @Dbay_error\n  constructor: ( ref )              -> super ref, \"cannot defer foreign keys inside a transaction\"\n\n### TAINT replace with more specific error, like below ###\nclass @Dbay_format_unknown extends @Dbay_error\n  constructor: ( ref, format ) ->\n    super ref, \"unknown DB format #{ref format}\"\n\nclass @Dbay_import_format_unknown extends @Dbay_error\n  constructor: ( ref, format ) ->\n    formats = [ ( require './types' )._import_formats..., ].join ', '\n    super ref, \"unknown import format #{rpr format} (known formats are #{formats})\"\n\n"
  ]
}