{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAb5B;;;EAeA,IAAA,GAA4B,OAAA,CAAQ,MAAR;;EAC5B,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,QAAA,GAA4B;;EAC5B,GAAA,GAA4B,OAAA,CAAQ,KAAR,EAlB5B;;;EAqBA,IAAC,CAAA,YAAD,GAAgB,QAAA,CAAE,IAAF,CAAA;AAChB,QAAA;AAAE;AACE,aAAO,CAAE,EAAE,CAAC,QAAH,CAAY,IAAZ,CAAF,CAAoB,CAAC,WAArB,CAAA,EADT;KAEA,cAAA;MAAM;MACJ,IAAmB,KAAK,CAAC,IAAN,KAAc,QAAjC;QAAA,MAAM,MAAN;OADF;;AAEA,WAAO;EALO,EArBhB;;;EA6BA,IAAC,CAAA,YAAD,GAAmB,IAAC,CAAA,YAAD,CAAc,QAAd,CAAH,GAA+B,QAA/B,GAA6C,CAAE,OAAA,CAAQ,IAAR,CAAF,CAAgB,CAAC,MAAjB,CAAA;AA7B7D",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/MAIN'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nshm_path                  = '/dev/shm'\nguy                       = require 'guy'\n\n#-----------------------------------------------------------------------------------------------------------\n@is_directory = ( path ) ->\n  try\n    return ( FS.statSync path ).isDirectory()\n  catch error\n    throw error unless error.code is 'ENOENT'\n  return false\n\n#-----------------------------------------------------------------------------------------------------------\n@autolocation = if @is_directory shm_path then shm_path else ( require 'os' ).tmpdir()\n\n\n\n"
  ]
}