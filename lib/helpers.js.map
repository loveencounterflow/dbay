{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/helpers.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DBAY/HELPERS'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\nPATH                      = require 'path'\nFS                        = require 'fs'\nshm_path                  = '/dev/shm'\nLFT                       = require 'letsfreezethat'\n\n\n#-----------------------------------------------------------------------------------------------------------\n@is_directory = ( path ) ->\n  try\n    return ( FS.statSync path ).isDirectory()\n  catch error\n    throw error unless error.code is 'ENOENT'\n  return false\n\n#-----------------------------------------------------------------------------------------------------------\n@is_file = ( path ) ->\n  try\n    return ( FS.statSync path ).isFile()\n  catch error\n    throw error unless error.code is 'ENOENT'\n  return false\n\n#-----------------------------------------------------------------------------------------------------------\n@unlink_file = ( path ) ->\n  ### Given a `path`, unlink the associated file; in case no file is found, ignore silently. If an error\n  occurs, just print a warning. To be used in an exit handler, so no error handling makes sense here. ###\n  try FS.unlinkSync path catch error\n    warn '^dbay@1^', error.message unless error.code is 'ENOENT'\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@autolocation = if @is_directory shm_path then shm_path else ( require 'os' ).tmpdir()\n\n#-----------------------------------------------------------------------------------------------------------\n@SQL = ( parts, expressions... ) ->\n  R = parts[ 0 ]\n  for expression, idx in expressions\n    R += expression.toString() + parts[ idx + 1 ]\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@omit_nullish = ( d ) ->\n  R       = {}\n  R[ k ]  = v for k, v of d when v?\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@def  = def   = Object.defineProperty\n@hide = hide  = ( object, name, value ) => Object.defineProperty object, name,\n    enumerable:   false\n    writable:     true\n    configurable: true\n    value:        value\n\n#-----------------------------------------------------------------------------------------------------------\n@_pick_with_fallback = ( d, fallback, keys... ) ->\n  R     = {}\n  keys  = keys.flat Infinity\n  for key in keys\n    R[ key ] = if ( value = d[ key ] ) is undefined then fallback else value\n  return [ R, keys, ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pick_with_fallback = ( d, fallback, keys... ) -> ( @_pick_with_fallback d, fallback, keys )[ 0 ]\n\n#-----------------------------------------------------------------------------------------------------------\n@pluck_with_fallback = ( d, fallback, keys... ) ->\n  [ R, keys, ] = @_pick_with_fallback d, fallback, keys...\n  delete d[ key ] for key in keys\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\n@def_oneoff = def_oneoff = ( object, name, cfg, method ) =>\n  get = ->\n    R = method.apply object\n    delete cfg.get\n    def object, name,\n      configurable: ( cfg.configurable  ? true )\n      enumerable:   ( cfg.enumerable    ? true )\n      value:        R\n    return R\n  def object, name, { enumerable: true, configurable: true, get, }\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\n@configure_with_types = ( self, cfg = null, types = null ) =>\n  { props, }    = require '..'\n  clasz         = self.constructor\n  #.........................................................................................................\n  ### assign defaults object where to be found to obtain viable `cfg` object: ###\n  defaults      = clasz.C?.defaults?.constructor_cfg ? null\n  self.cfg      = { defaults..., cfg..., }\n  #.........................................................................................................\n  ### procure `types` where not given; make it a non-enumerable to avoid rpr of object: ###\n  types        ?= new ( require 'intertype' ).Intertype()\n  @def self, 'types', { enumerable: false, value: types, }\n  #.........................................................................................................\n  ### call class method `declare_types()`; this method may perform `self.types.validate.constructor_cfg self.cfg`: ###\n  clasz.declare_types self if clasz.declare_types?\n  self.cfg      = LFT.freeze self.cfg\n  return undefined\n"
  ]
}