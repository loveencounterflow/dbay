{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/random.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nGUY                       = require 'guy'\n{ alert\n  debug\n  help\n  info\n  plain\n  praise\n  urge\n  warn\n  whisper }               = GUY.trm.get_loggers 'DBAY/RANDOM'\n{ rpr\n  inspect\n  echo\n  log     }               = GUY.trm\n#...........................................................................................................\nguy                       = require 'guy'\ntypes                     = new ( require 'intertype' ).Intertype()\n\n\n#===========================================================================================================\ntypes.declare 'constructor_cfg', tests:\n  \"@isa.object x\":                ( x ) -> @isa.object x\n  \"x.seed may be a float within certain boundaries\": ( x ) ->\n    return true  unless x.seed?\n    return false unless @isa.float x.seed\n    return -1e10 < x.seed < +1e10\n  \"x.delta may be a float within certain boundaries\": ( x ) ->\n    return true  unless x.delta?\n    return false unless @isa.float x.delta\n    return false unless ( Math.abs x.delta ) > 1e-3\n    return -1e10 < x.delta < +1e10\n\n\n#===========================================================================================================\n# RANDOM NUMBER GENERATION\n# seedable for testing purposes\n#-----------------------------------------------------------------------------------------------------------\nclass @Random\n\n  #---------------------------------------------------------------------------------------------------------\n  @C: guy.lft.freeze\n    defaults:\n      #.....................................................................................................\n      constructor_cfg:\n        seed:         null\n        delta:        null\n\n  #=========================================================================================================\n  constructor: ( cfg ) ->\n    @cfg = guy.lft.freeze { @constructor.C.defaults.constructor_cfg..., cfg..., }\n    types.validate.constructor_cfg @cfg\n    if @cfg.seed? or @cfg.delta?\n      seed                = @cfg.seed  ? 12.34\n      delta               = @cfg.delta ? 1\n      @get_random_integer = GUY.rnd.get_rnd_int seed, delta\n    else\n      @get_random_integer = GUY.rnd.random_integer.bind GUY.rnd\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  get_random_filename: ( extension = 'sqlite' ) ->\n    n10 = @get_random_integer 1_000_000_000, 9_999_999_999\n    return \"dbay-#{n10}.#{extension}\"\n\n\n\n"
  ]
}