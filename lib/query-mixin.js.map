{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/query-mixin.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/MIXIN/QUERY'\ndebug                     = CND.get_logger 'debug',     badge\n#...........................................................................................................\nguy                       = require 'guy'\nE                         = require './errors'\n\n\n#===========================================================================================================\n@Dbay_query = ( clasz = Object ) => class extends clasz\n\n  #---------------------------------------------------------------------------------------------------------\n  _$query_initialize: ->\n    guy.props.def @_me, '_statements', { enumerable: false, value: {}, }\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _clear_statements_cache: ->\n    delete @_statements[ k ] for k of @_statements\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  do: ( first, P... ) =>\n    return switch ( type = @types.type_of first )\n      when 'text'     then @_query_run_or_execute first, P...\n      when 'function' then @with_transaction first, P...\n    throw new E.Dbay_wrong_type '^dbay/query@1^', 'a text or a function', type\n\n  #---------------------------------------------------------------------------------------------------------\n  _query_run_or_execute: ( sql, P... ) ->\n    return @query sql, P... if P.length > 0\n    return @execute sql, P... if @_statements[ sql ] is @constructor.C.symbols.execute\n    try\n      statement = @_statements[ sql ] = @sqlt1.prepare sql\n    catch error\n      throw error unless ( error.name is 'RangeError' ) \\\n        and ( error.message is \"The supplied SQL string contains more than one statement\" )\n      @_statements[ sql ] = @constructor.C.symbols.execute\n      return @execute sql, P...\n    return if statement.reader then ( statement.iterate P... ) else ( statement.run P... )\n\n  #---------------------------------------------------------------------------------------------------------\n  query: ( sql, P... ) ->\n    # @_echo 'query', sql\n    statement = ( @_statements[ sql ] ?= @sqlt1.prepare sql )\n    return if statement.reader then ( statement.iterate P... ) else ( statement.run P... )\n\n  #---------------------------------------------------------------------------------------------------------\n  execute: ( sql, P... ) ->\n    throw new E.Dbay_argument_not_allowed '^dbay/query@2^', \"extra\", rpr P if P.length > 0\n    # @_echo 'execute', sql\n    @sqlt1.exec sql\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  prepare: ( sql  ) ->\n    # @_echo 'prepare', sql\n    return ( @_statements[ sql ] ?= @sqlt1.prepare sql )\n\n\n\n\n"
  ]
}