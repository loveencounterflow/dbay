{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/query-mixin.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,CAAA,EAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,GAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B,EAP5B;;;EASA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,CAAA,GAA4B,OAAA,CAAQ,UAAR,EAV5B;;;EAcA,IAAC,CAAA,UAAD,GAAc,CAAE,QAAQ,MAAV,CAAA,GAAA;WAAsB,MAAA,QAAc,MAAd,CAAA;;MAGlC,WAAa,CAAA,CAAA;aACX,CAAA;QACA,GAAG,CAAC,KAAK,CAAC,GAAV,CAAc,IAAd,EAAiB,aAAjB,EAAgC;UAAE,UAAA,EAAY,KAAd;UAAqB,KAAA,EAAO,CAAA;QAA5B,CAAhC;AACA,eAAO;MAHI,CADf;;;MAOE,uBAAyB,CAAA,CAAA;AAC3B,YAAA;QAAI,KAAA,qBAAA;UAAA,OAAO,IAAC,CAAA,WAAW,CAAE,CAAF;QAAnB;AACA,eAAO;MAFgB,CAP3B;;;MAYE,KAAO,CAAE,GAAF,EAAA,GAAO,CAAP,CAAA;AACT,YAAA,IAAA,EAAA,SAAA;;QACI,SAAA,GAAY,8CAAc,CAAE,GAAF,QAAA,CAAE,GAAF,IAAW,IAAC,CAAA,KAAK,CAAC,OAAP,CAAe,GAAf,CAAzB;QACL,IAAG,SAAS,CAAC,MAAb;iBAA2B,SAAS,CAAC,OAAV,CAAkB,GAAA,CAAlB,EAA3B;SAAA,MAAA;iBAA2D,SAAS,CAAC,GAAV,CAAc,GAAA,CAAd,EAA3D;;MAHF,CAZT;;;MAkBE,OAAS,CAAE,GAAF,EAAA,GAAO,CAAP,CAAA;QACP,IAAqE,CAAC,CAAC,MAAF,GAAW,CAAhF;UAAA,MAAM,IAAI,CAAC,CAAC,yBAAN,CAAgC,WAAhC,EAA6C,OAA7C,EAAsD,GAAA,CAAI,CAAJ,CAAtD,EAAN;SAAJ;;QAEI,IAAC,CAAA,KAAK,CAAC,IAAP,CAAY,GAAZ;AACA,eAAO;MAJA,CAlBX;;;MAyBE,OAAS,CAAE,GAAF,CAAA;AACX,YAAA,IAAA;;AACI,eAAO,8CAAc,CAAE,GAAF,QAAA,CAAE,GAAF,IAAW,IAAC,CAAA,KAAK,CAAC,OAAP,CAAe,GAAf,CAAzB;MAFA;;IA3ByB;EAAtB;AAdd",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'DBAY/MIXIN/QUERY'\ndebug                     = CND.get_logger 'debug',     badge\n#...........................................................................................................\nguy                       = require 'guy'\nE                         = require './errors'\n\n\n#===========================================================================================================\n@Dbay_query = ( clasz = Object ) => class extends clasz\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ->\n    super()\n    guy.props.def @, '_statements', { enumerable: false, value: {}, }\n    return undefined\n\n  #---------------------------------------------------------------------------------------------------------\n  _clear_statements_cache: ->\n    delete @_statements[ k ] for k of @_statements\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  query: ( sql, P... ) ->\n    # @_echo 'query', sql\n    statement = ( @_statements[ sql ] ?= @sqlt1.prepare sql )\n    return if statement.reader then ( statement.iterate P... ) else ( statement.run P... )\n\n  #---------------------------------------------------------------------------------------------------------\n  execute: ( sql, P... ) ->\n    throw new E.Dbay_argument_not_allowed '^dba@308^', \"extra\", rpr P if P.length > 0\n    # @_echo 'execute', sql\n    @sqlt1.exec sql\n    return null\n\n  #---------------------------------------------------------------------------------------------------------\n  prepare: ( sql  ) ->\n    # @_echo 'prepare', sql\n    return ( @_statements[ sql ] ?= @sqlt1.prepare sql )\n\n\n\n\n"
  ]
}